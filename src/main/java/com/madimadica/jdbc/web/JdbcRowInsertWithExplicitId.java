package com.madimadica.jdbc.web;

import com.madimadica.jdbc.api.RowInsert;
import com.madimadica.jdbc.api.RowInsertBuilderStepsWithExplicitId;
import com.madimadica.jdbc.api.RowInsertBuilderWithExplicitId;
import org.springframework.jdbc.core.RowMapper;

/**
 * For use with JDBC implementations that can only extract generated row IDs by explicitly specifying the column.
 */
public non-sealed interface JdbcRowInsertWithExplicitId extends JdbcRowInsertWithId {

    /**
     * Begin a sequence of fluent API operations to define a single
     * row INSERT INTO query. Terminated (and executed) by a call to insert,
     * with or without a returning a generated value.
     * Calls with a generated value must supply an ID or RowMapper.
     * @param tableName Name of the table to update
     * @return fluent API builder to finish defining the insert.
     */
    default RowInsertBuilderStepsWithExplicitId.RequiredValue insertInto(String tableName) {
        getLogger().trace("Using [insertInto] API");
        return new RowInsertBuilderWithExplicitId(this, tableName);
    }

    /**
     * INSERT a single row using the given {@link RowInsert} parameter object.
     * Returns a generated Number value.
     * @param rowInsert configured row insert parameter
     * @param column name of the generated column
     * @return an autogenerated {@link Number} value, nullable.
     */
    Number insertReturningNumber(RowInsert rowInsert, String column);

    /**
     * INSERT a single row using the given {@link RowInsert} parameter object.
     * Returns the generated row after applying the given RowMapper.
     * @param rowInsert configured row insert parameter
     * @param rowMapper how to map the inserted row.
     * @param <T> type of the mapped row
     * @return an autogenerated {@link Number} value, nullable.
     */
    <T> T insertReturning(RowInsert rowInsert, RowMapper<T> rowMapper);
}
